# Default values for appserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

connections:
  mysqlDatabaseMigration: "true"
  mysqlHost: "mysql"
  mysqlDatabase: "onlyoffice"
  mysqlUser: "onlyoffice_user"
  mysqlPassword: ""
  mysqlRootPassword: ""
  mysqlExistingSecret: "mysql"
  mysqlSecretKeyPassword: "mysql-password"
  mysqlSecretKeyRootPassword: "mysql-root-password"
  appDotnetEnv: "test"
  appCoreBaseDomain: "localhost"
  appCoreMachinekey: "your_core_machinekey"
  DocumentServerUrlPublic: "/ds-vpath/"
  DocumentServerUrlInternal: "http://onlyoffice-document-server/"
  DocumentServerUrlConverter: "/ds-vpath/ConvertService.ashx"
  kafkaHost: "onlyoffice-kafka"
  elkHost: "elasticsearch-master"
  proxyHost: "onlyoffice-proxy"
  countWorkerConnections: "1024"
  nginxSnvsubstTemplateSuffix: ".template"
  serviceKeepalive: "64"
  apiHost: "onlyoffice-api"
  apiSystemHost: "onlyoffice-api-system"
  calendarHost: "onlyoffice-calendar"
  crmHost: "onlyoffice-crm"
  storageEncryptionHost: "onlyoffice-storage-encryption"
  mailHost: "onlyoffice-mail"
  storageMigrationHost: "onlyoffice-storage-migration"
  notifyHost: "onlyoffice-notify"
  projektsServerHost: "onlyoffice-projects-server"
  urlshortenerHost: "onlyoffice-urlshortener"
  studioNotifyHost: "onlyoffice-studio-notify"
  socketHost: "onlyoffice-socket"
  telegramServiceHost: "onlyoffice-telegram-service"
  peopleServerHost: "onlyoffice-people-server"
  filesHost: "onlyoffice-files"
  filesServicesHost: "onlyoffice-files-services"
  studioHost: "onlyoffice-studio"
  backupHost: "onlyoffice-backup"
  thumbnailsHost: "onlyoffice-thumbnails"
  ssoauthHost: "onlyoffice-ssoauth"
  documentServer: "onlyoffice-document-server"
  servicePort: "5050"

images:
  tag: 1.2.0-r01
  initContainer:
    initStorage: onlyoffice/4testing-appserver-bin-share
    waitStorage: onlyoffice/4testing-appserver-wait-bin-share
  calendar: onlyoffice/4testing-appserver-calendar
  crm: onlyoffice/4testing-appserver-crm
  files: onlyoffice/4testing-appserver-files
  mail: onlyoffice/4testing-appserver-mail
  people: onlyoffice/4testing-appserver-people-server
  projects: onlyoffice/4testing-appserver-projects-server
  proxy: onlyoffice/4testing-appserver-proxy
  apiSystem: onlyoffice/4testing-appserver-api-system
  api: onlyoffice/4testing-appserver-api
  backup: onlyoffice/4testing-appserver-backup
  documentserver: onlyoffice/documentserver
  documentserverTag: 7.0.1
  filesServices: onlyoffice/4testing-appserver-files-services
  notify: onlyoffice/4testing-appserver-notify
  socket: onlyoffice/4testing-appserver-socket
  ssoauth: onlyoffice/4testing-appserver-ssoauth
  storageEncryption: onlyoffice/4testing-appserver-storage-encryption
  storageMigration: onlyoffice/4testing-appserver-storage-migration
  studioNotify: onlyoffice/4testing-appserver-studio-notify
  studio: onlyoffice/4testing-appserver-studio
  telegramService: onlyoffice/4testing-appserver-telegram-service
  thumbnails: onlyoffice/4testing-appserver-thumbnails
  urlshortener: onlyoffice/4testing-appserver-urlshortener

persistence:
  appData:
    storageClass: "nfs"
    size: 1Gi
  calendarData:
    storageClass: "nfs"
    size: 1Gi
  crmData:
    storageClass: "nfs"
    size: 1Gi
  filesData:
    storageClass: "nfs"
    size: 1Gi
  mailData:
    storageClass: "nfs"
    size: 1Gi
  peopleData:
    storageClass: "nfs"
    size: 1Gi
  projectData:
    storageClass: "nfs"
    size: 1Gi
  proxyLog:
    storageClass: "nfs"
    size: 1Gi

containerPorts:
  appserver:
    http: 5050
  proxy:
    url: 8081
    internal: 8099
    external: 8092
  docs:
    http: 80
    https: 443
    spch: 8080
    docs: 8000
    prox: 8888
  socket: 9899
  sso: 9834
  thumbnails: 9800
  urlshortener: 9999

podAnnotations:
  rollme: "{{ randAlphaNum 5 | quote }}"

podAntiAffinity:
  type: "soft"
  topologyKey: kubernetes.io/hostname
  weight: "100"

nodeSelector: {}

tolerations: []

jwt:
  enabled: true
  secret: "jwt_secret"
  header: "AuthorizationJwt"
  inBody: true

livenessProbe:
  enabled: false
  failureThreshold: 2
  httpGet:
    path: /
    port: 5050
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
  initialDelaySeconds: 45

startupProbe:
  enabled: false
  httpGet:
    path: /
    port: 5050
  failureThreshold: 30
  periodSeconds: 10

readinessProbe:
  enabled: false
  failureThreshold: 2
  httpGet:
    path: /
    port: 5050
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 3 

deploymetsUpdateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 25%

statefulsetUpdateStrategy:
  type: RollingUpdate

podSecurityContext:
  enabled: false
  runAsUser: 104
  runAsGroup: 107

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
  tls:
    enabled: false
    secretName: tls
  host: ""

onlyofficePeopleServer:
  replicaCount: 2

onlyofficeFiles:
  replicaCount: 2

onlyofficeProxy:
  replicaCount: 2

onlyofficeCalendar:
  enabled: true
  replicaCount: 2
  
onlyofficeCrm:
  enabled: true
  replicaCount: 2
  
onlyofficeMail:
  enabled: true
  replicaCount: 2
  
onlyofficeProjectServer:
  enabled: true
  replicaCount: 2

imagePullSecrets: myregistrykey
