# Default values for DocSpace

## App common parameters
## This block defines common parameters for all deployments and statefulsets
##
## Connection parameters to external services
connections:
  envExtension: "none"
  mysqlDatabaseMigration: "false"
  mysqlHost: "mysql"
  mysqlDatabase: "onlyoffice"
  superuser: "root"
  mysqlRootPassword: ""
  mysqlUser: "onlyoffice_user"
  mysqlPassword: ""
  mysqlExistingSecret: "mysql"
  mysqlSecretKeyRootPassword: "mysql-root-password"
  mysqlSecretKeyPassword: "mysql-password"
  redisHost: "redis-master"
  redisPort: "6379"
  redisUser: default
  redisExistingSecret: redis
  redisSecretKeyName: redis-password
  redisPassword: ""
  redisNoPass: false
  brokerHost: "rabbitmq"
  brokerPort: "5672"
  brokerVhost: "/"
  brokerUser: guest
  brokerProto: amqp
  brokerUri: ""
  brokerExistingSecret: rabbitmq
  brokerSecretKeyName: rabbitmq-password
  brokerPassword: ""
  elkSheme: "http"
  elkHost: "elasticsearch-master"
  elkPort: "9200"
  elkThreads: "1"
  proxyHost: "onlyoffice-proxy"
  countWorkerConnections: "1024"
  nginxSnvsubstTemplateSuffix: ".template"
  apiHost: "onlyoffice-api"
  apiSystemHost: "onlyoffice-api-system"
  notifyHost: "onlyoffice-notify"
  studioNotifyHost: "onlyoffice-studio-notify"
  socketHost: "onlyoffice-socket"
  peopleServerHost: "onlyoffice-people-server"
  filesHost: "onlyoffice-files"
  filesServicesHost: "onlyoffice-files-services"
  studioHost: "onlyoffice-studio"
  backupHost: "onlyoffice-backup"
  ssoauthHost: "onlyoffice-ssoauth"
  documentServerHost: "onlyoffice-document-server"
  clearEventsHost: "onlyoffice-clear-events"
  doceditorHost: "onlyoffice-doceditor"
  backupBackgruondTasksHost: "onlyoffice-backup-background-tasks"
  loginHost: "onlyoffice-login"
  appUrlPortal: "http://onlyoffice-proxy:8092"
  appCoreBaseDomain: "localhost"
  appCoreMachinekey: "your_core_machinekey"
  documentServerUrlPublic: "/ds-vpath/"
  documentServerUrlInternal: "http://onlyoffice-document-server/"

images:
  initContainer:
    initStorage: onlyoffice/4testing-docspace-bin-share
    waitStorage: onlyoffice/4testing-docspace-wait-bin-share
  people: onlyoffice/4testing-docspace-people-server
  apiSystem: onlyoffice/4testing-docspace-api-system
  api: onlyoffice/4testing-docspace-api
  backup: onlyoffice/4testing-docspace-backup
  filesServices: onlyoffice/4testing-docspace-files-services
  notify: onlyoffice/4testing-docspace-notify
  socket: onlyoffice/4testing-docspace-socket
  ssoauth: onlyoffice/4testing-docspace-ssoauth
  studioNotify: onlyoffice/4testing-docspace-studio-notify
  studio: onlyoffice/4testing-docspace-studio
  clearEvents: onlyoffice/4testing-docspace-clear-events
  backupBackgroundTasks: onlyoffice/4testing-docspace-backup-background
  doceditor: onlyoffice/4testing-docspace-doceditor
  login: onlyoffice/4testing-docspace-login
  tag: v1.0.0
  pullPolicy: IfNotPresent

## namespaceOverride The name of the namespace in which DocSpace will be deployed
## If not set, the name will be taken from .Release.Namespace
namespaceOverride: ""
## commonLabels Defines labels that will be additionally added to all the deployed resources
## You can also use `tpl` as the value for the key
## ref: https://helm.sh/docs/chart_best_practices/labels/
## Example:
## commonLabels:
##   app.kubernetes.io/name: "{{ .Chart.Name }}"
##   helm.sh/chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
##   app.kubernetes.io/managed-by: "{{ .Release.Service }}"
##   app.kubernetes.io/instance: "{{ .Release.Name }}"
##   app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
commonLabels: {}
## podAnnotations Map of annotations to add to the DocSpace pods
podAnnotations:
  rollme: "{{ randAlphaNum 5 | quote }}"
## Service account parameters
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  ## serviceAccount.create Enable ServiceAccount creation
  create: false
  ## serviceAccount.name Name of the ServiceAccount to be used
  ## If not set and `serviceAccount.create` is `true` the name will be taken from .Release.Name
  ## If not set and `serviceAccount.create` is `false` the name will be "default"
  name: ""
  ## serviceAccount.annotations Map of annotations to add to the ServiceAccount
  annotations: {}
  ## serviceAccount.automountServiceAccountToken Enable auto mount of ServiceAccountToken on the serviceAccount created
  ## Used only if `serviceAccount.create` is `true`
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#opt-out-of-api-credential-automounting
  automountServiceAccountToken: true
## Configure a Security Context for a Pods
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext:
  ## podSecurityContext.enabled Enable security context for the pods
  ## If set to true, `podSecurityContext` is enabled for all resources describing the podTemplate
  enabled: false
  ## podSecurityContext.runAsUser User ID for the DocSpace pods
  runAsUser: 104
  ## podSecurityContext.runAsGroup Group ID for the DocSpace pods
  runAsGroup: 107
## Configure a Security Context for containers in Pods
containerSecurityContext:
   ## containerSecurityContext.enabled Enable security context for containers in pods
  enabled: false
  ## containerSecurityContext.allowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process
  allowPrivilegeEscalation: false
## nodeSelector Node labels for pods assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
nodeSelector: {}
## tolerations Tolerations for pods assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations: []
## imagePullSecrets Container image registry secret name
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: ""
## DocSpace Init Containers parameters
initContainers:
  ## Parameters of the Wait Storage initContainers
  waitStorage:
    image:
      ## initContainers.waitStorage.image.repository app-wait-storage initContainer image repository
      repository: onlyoffice/4testing-docspace-wait-bin-share
      ## initContainers.waitStorage.image.tag app-wait-storage initContainer image tag
      ## If set to, it takes priority over the `images.tag`
      tag: ""
      ## initContainers.waitStorage.image.pullPolicy app-wait-storage initContainer image pull policy
      pullPolicy: IfNotPresent
    ## app-wait-storage initContainer resource requests and limits
    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ## initContainers.waitStorage.resources.requests The requested resources for the app-wait-storage initContainer
    ## initContainers.waitStorage.resources.limits The resources limits for the app-wait-storage initContainer
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "1Gi"
        cpu: "1000m"

containerPorts:
  app: 5050
  socket: 9899
  sso: 9834
  doceditor: 5013
  backupBackgruondTasks: 5032
  login: 5011

startupProbe:
  enabled: false
  httpGet:
    path: /liveness
    port: 5050
  failureThreshold: 30
  periodSeconds: 10

readinessProbe:
  enabled: false
  failureThreshold: 2
  httpGet:
    path: /liveness
    port: 5050
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 3

livenessProbe:
  enabled: false
  failureThreshold: 2
  httpGet:
    path: /liveness
    port: 5050
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
  initialDelaySeconds: 45

resources:
  requests:
    memory: "256Mi"
    cpu: "100m"
  limits:
    memory: "1Gi"
    cpu: "1000m"

## App service parameters
##
service:
  proxy:
    existing: ""
    annotations: {}
    port:
      external: 8092
    type: ClusterIP
  proxyFrontend:
    existing: ""
    annotations: {}
    type: LoadBalancer

## App persistence parameters
##
persistence:
  storageClass: "nfs"
  appData:
    existingClaim: ""
    size: 1Gi
  filesData:
    existingClaim: ""
    size: 1Gi
  peopleData:
    existingClaim: ""
    size: 1Gi
  proxyLog:
    existingClaim: ""
    size: 1Gi

## App JWT parameters
##
jwt:
  enabled: true
  secret: "jwt_secret"
  header: "AuthorizationJwt"
  inBody: false

extraConf:
  secretName: ""
  fileName:
    - appsettings.test.json

## App common deployment parameters
## This block defines common parameters for all deployments only
##
podAntiAffinity:
  type: "soft"
  topologyKey: kubernetes.io/hostname
  weight: "100"

deploymetsUpdateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 25%

## App People Server Deployment parameters
##
onlyofficePeopleServer:
  replicaCount: 2

## DocSpace Files Deployment parameters
## This block defines the parameters common to all the Pods of this deployment
##
files:
  ## files.replicaCount Number of Files replicas to deploy
  ## If the `files.autoscaling.enabled` parameter is enabled, it is ignored
  replicaCount: 1
  ## Update strategy used to replace old Pods by new ones
  updateStrategy:
    ## files.updateStrategy.type Files deployment update strategy type
    ## Allowed values: `RollingUpdate` or `Recreate`
    type: RollingUpdate
    ## files.updateStrategy.rollingUpdate Used only when `files.updateStrategy.type=RollingUpdate`
    rollingUpdate:
      ## files.updateStrategy.rollingUpdate.maxUnavailable Maximum number of Files Pods unavailable during the update process
      maxUnavailable: 25%
      ## files.updateStrategy.rollingUpdate.maxSurge Maximum number of Files Pods created over the desired number of Pods
      maxSurge: 25%
  ## Pod affinity rules for Files Pods scheduling by nodes relative to other Pods
  ## Pod affinity allow you to constrain which nodes Files Pods can be scheduled on based on the labels of Pods already running on that node
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Example:
  ## podAffinity:
  ##   requiredDuringSchedulingIgnoredDuringExecution:
  ##   - labelSelector:
  ##       matchExpressions:
  ##       - key: app
  ##         operator: In
  ##         values:
  ##         - store
  ##     topologyKey: topology.kubernetes.io/zone
  ##
  podAffinity: {}
  ## Node affinity rules for Files Pods scheduling by nodes
  ## Node affinity allow you to constrain which nodes Files Pod can be scheduled on based on node labels
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ## Example:
  ## nodeAffinity:
  ##   requiredDuringSchedulingIgnoredDuringExecution:
  ##     nodeSelectorTerms:
  ##     - matchExpressions:
  ##       - key: topology.kubernetes.io/zone
  ##         operator: In
  ##         values:
  ##         - zone1
  ##         - zone2
  ##
  nodeAffinity: {}
  ## Files container image parameters
  image:
    ## files.image.repository files container image repository
    repository: onlyoffice/4testing-docspace-files
    ## files.image.tag files container image tag
    ## If set to, it takes priority over the `images.tag`
    tag: ""
    ## files.image.pullPolicy files container image pull policy
    pullPolicy: IfNotPresent
  ## files.containerPorts.app files container port
  containerPorts:
    app: 5050
  ## Probe used for the files container: startup, readiness and liveness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  ## The parameters below for startup probes are used only when `files.startupProbe.enabled=true`
  startupProbe:
    ## files.startupProbe.enabled Enable startupProbe for files container
    enabled: false
    httpGet:
      ## files.startupProbe.httpGet.path Checking the path for startupProbe
      path: /liveness
      ## files.startupProbe.httpGet.port Checking the port for startupProbe
      port: 5050
    ## files.startupProbe.failureThreshold Failure threshold for startupProbe
    failureThreshold: 30
    ## files.startupProbe.periodSeconds Period seconds for startupProbe
    periodSeconds: 10
  ## The parameters below for readiness probes are used only when `files.readinessProbe.enabled=true`
  readinessProbe:
    ## files.readinessProbe.enabled Enable readinessProbe for files container
    enabled: false
    ## files.readinessProbe.failureThreshold Failure threshold for readinessProbe
    failureThreshold: 2
    httpGet:
      ## files.readinessProbe.httpGet.path Checking the path for readinessProbe
      path: /liveness
      ## files.readinessProbe.httpGet.port Checking the port for readinessProbe
      port: 5050
    ## files.readinessProbe.periodSeconds Period seconds for readinessProbe
    periodSeconds: 10
    ## files.readinessProbe.successThreshold Success threshold for readinessProbe
    successThreshold: 1
    ## files.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    timeoutSeconds: 3
  ## The parameters below for liveness probes are used only when `files.livenessProbe.enabled=true`
  livenessProbe:
    ## files.livenessProbe.enabled Enable livenessProbe for files container
    enabled: false
    ## files.livenessProbe.failureThreshold Failure threshold for livenessProbe
    failureThreshold: 3
    httpGet:
      ## files.livenessProbe.httpGet.path Checking the path for livenessProbe
      path: /liveness
      ## files.livenessProbe.httpGet.port Checking the port for livenessProbe
      port: 5050
    ## files.livenessProbe.periodSeconds Period seconds for livenessProbe
    periodSeconds: 10
    ## files.livenessProbe.successThreshold Success threshold for livenessProbe
    successThreshold: 1
    ## files.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    timeoutSeconds: 5
  ## files container resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  ## files.resources.requests The requested resources for the files container
  ## files.resources.limits The resources limits for the files container
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "4Gi"
      cpu: "4000m"

## DocSpace Proxy Deployment parameters
## This block defines the parameters common to all the Pods of this deployment
##
proxy:
  ## proxy.replicaCount Number of proxy replicas to deploy
  ## If the `proxy.autoscaling.enabled` parameter is enabled, it is ignored
  replicaCount: 1
  ## Update strategy used to replace old Pods by new ones
  updateStrategy:
    ## proxy.updateStrategy.type proxy deployment update strategy type
    ## Allowed values: `RollingUpdate` or `Recreate`
    type: RollingUpdate
    ## proxy.updateStrategy.rollingUpdate Used only when `proxy.updateStrategy.type=RollingUpdate`
    rollingUpdate:
      ## proxy.updateStrategy.rollingUpdate.maxUnavailable Maximum number of proxy Pods unavailable during the update process
      maxUnavailable: 25%
      ## proxy.updateStrategy.rollingUpdate.maxSurge Maximum number of proxy Pods created over the desired number of Pods
      maxSurge: 25%
  ## Pod affinity rules for proxy Pods scheduling by nodes relative to other Pods
  ## Pod affinity allow you to constrain which nodes proxy Pods can be scheduled on based on the labels of Pods already running on that node
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Example:
  ## podAffinity:
  ##   requiredDuringSchedulingIgnoredDuringExecution:
  ##   - labelSelector:
  ##       matchExpressions:
  ##       - key: app
  ##         operator: In
  ##         values:
  ##         - store
  ##     topologyKey: topology.kubernetes.io/zone
  ##
  podAffinity: {}
  ## Node affinity rules for proxy Pods scheduling by nodes
  ## Node affinity allow you to constrain which nodes proxy Pod can be scheduled on based on node labels
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ## Example:
  ## nodeAffinity:
  ##   requiredDuringSchedulingIgnoredDuringExecution:
  ##     nodeSelectorTerms:
  ##     - matchExpressions:
  ##       - key: topology.kubernetes.io/zone
  ##         operator: In
  ##         values:
  ##         - zone1
  ##         - zone2
  ##
  nodeAffinity: {}
  ## proxy container image parameters
  image:
    ## proxy.image.repository proxy container image repository
    repository: onlyoffice/4testing-docspace-proxy
    ## proxy.image.tag proxy container image tag
    ## If set to, it takes priority over the `images.tag`
    tag: ""
    ## proxy.image.pullPolicy proxy container image pull policy
    pullPolicy: IfNotPresent
  ## proxy.containerPorts.external proxy container port
  containerPorts:
    external: 8092
  ## Probe used for the proxy container: startup, readiness and liveness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  ## The parameters below for startup probes are used only when `proxy.startupProbe.enabled=true`
  startupProbe:
    ## proxy.startupProbe.enabled Enable startupProbe for proxy container
    enabled: false
    httpGet:
      ## proxy.startupProbe.httpGet.path Checking the path for startupProbe
      path: /
      ## proxy.startupProbe.httpGet.port Checking the port for startupProbe
      port: 8092
    ## proxy.startupProbe.failureThreshold Failure threshold for startupProbe
    failureThreshold: 30
    ## proxy.startupProbe.periodSeconds Period seconds for startupProbe
    periodSeconds: 10
  ## The parameters below for readiness probes are used only when `proxy.readinessProbe.enabled=true`
  readinessProbe:
    ## proxy.readinessProbe.enabled Enable readinessProbe for proxy container
    enabled: false
    ## proxy.readinessProbe.failureThreshold Failure threshold for readinessProbe
    failureThreshold: 2
    httpGet:
      ## proxy.readinessProbe.httpGet.path Checking the path for readinessProbe
      path: /
      ## proxy.readinessProbe.httpGet.port Checking the port for readinessProbe
      port: 8092
    ## proxy.readinessProbe.periodSeconds Period seconds for readinessProbe
    periodSeconds: 10
    ## proxy.readinessProbe.successThreshold Success threshold for readinessProbe
    successThreshold: 1
    ## proxy.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    timeoutSeconds: 3
  ## The parameters below for liveness probes are used only when `proxy.livenessProbe.enabled=true`
  livenessProbe:
    ## proxy.livenessProbe.enabled Enable livenessProbe for proxy container
    enabled: false
    ## proxy.livenessProbe.failureThreshold Failure threshold for livenessProbe
    failureThreshold: 5
    httpGet:
      ## proxy.livenessProbe.httpGet.path Checking the path for livenessProbe
      path: /
      ## proxy.livenessProbe.httpGet.port Checking the port for livenessProbe
      port: 8092
    ## proxy.livenessProbe.periodSeconds Period seconds for livenessProbe
    periodSeconds: 10
    ## proxy.livenessProbe.successThreshold Success threshold for livenessProbe
    successThreshold: 1
    ## proxy.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    timeoutSeconds: 5
  ## proxy container resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  ## proxy.resources.requests The requested resources for the proxy container
  ## proxy.resources.limits The resources limits for the proxy container
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "2Gi"
      cpu: "2000m"
  ## Additional configuration files for Proxy
  extraConf:
    initScripts:
      ## proxy.extraConf.initScripts.configMap The name of the ConfigMap containing initialization scripts
      configMap: proxy-init-scripts
      ## proxy.extraConf.initScripts.fileName The names of scripts containing initialization scripts
      ## The values set here are necessary for correct proxy configuration. You don't need to change it
      fileName:
        - 40-change-hosts.sh
        - 50-change-proxy-onlyoffice-conf.sh
    customInitScripts:
      ## proxy.extraConf.customInitScripts.configMap The name of the ConfigMap containing custom initialization scripts
      configMap: ""
      ## proxy.extraConf.customInitScripts.fileName The names of scripts containing custom initialization scripts
      ## Must be the same as the `key` names in `proxy.extraConf.customInitScripts.configMap`
      ## May contain multiple values
      fileName:
        - 60-custom-init-scripts.sh
    templates:
      ## proxy.extraConf.templates.configMap The name of the ConfigMap containing configuration file templates containing environment variables
      ## The values of these variables will be substituted when the container is started
      configMap: ""
      ## proxy.extraConf.templates.fileName The names of the configuration file templates containing environment variables
      ## Must be the same as the `key` names in `proxy.extraConf.templates.configMap`
      ## May contain multiple values
      fileName:
        - 10.upstream.conf.template
    confd:
      ## proxy.extraConf.confd.configMap The name of the ConfigMap containing additional custom configuration files
      ## These files will be map in the `/etc/nginx/conf.d/` directory of the container
      configMap: ""
      ## proxy.extraConf.confd.fileName The names of the configuration files containing custom configuration files
      ## Must be the same as the `key` names in `proxy.extraConf.confd.configMap`
      ## May contain multiple values
      fileName:
        - gzip.conf

## App common statefulset parameters
## This block defines common parameters for all statefulsets only
##
statefulsetUpdateStrategy:
  type: RollingUpdate

## App Api System statefulset parameters
##
onlyofficeApiSystem:
  enabled: true

## App Doceditor statefulset parameters
##
onlyofficeDoceditor:
  startupProbe:
    enabled: false
    httpGet:
      path: /liveness
      port: 5013
    failureThreshold: 30
    periodSeconds: 10
  readinessProbe:
    enabled: false
    failureThreshold: 2
    httpGet:
      path: /liveness
      port: 5013
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
  livenessProbe:
    enabled: false
    failureThreshold: 5
    httpGet:
      path: /liveness
      port: 5013
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
    initialDelaySeconds: 45

## App Backup Backgruond Tasks statefulset parameters
##
onlyofficeBackupBackgruondTasks:
  startupProbe:
    enabled: false
    httpGet:
      path: /liveness
      port: 5050
    failureThreshold: 30
    periodSeconds: 10
  readinessProbe:
    enabled: false
    failureThreshold: 2
    httpGet:
      path: /liveness
      port: 5050
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
  livenessProbe:
    enabled: false
    failureThreshold: 5
    httpGet:
      path: /liveness
      port: 5050
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
    initialDelaySeconds: 45

## App Login statefulset parameters
##
onlyofficeLogin:
  startupProbe:
    enabled: false
    httpGet:
      path: /liveness
      port: 5011
    failureThreshold: 30
    periodSeconds: 10
  readinessProbe:
    enabled: false
    failureThreshold: 2
    httpGet:
      path: /liveness
      port: 5011
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
  livenessProbe:
    enabled: false
    failureThreshold: 5
    httpGet:
      path: /liveness
      port: 5011
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
    initialDelaySeconds: 45

## App Socket statefulset parameters
##
onlyofficeSocket:
  startupProbe:
    enabled: false
    httpGet:
      path: /liveness
      port: 5050
    failureThreshold: 30
    periodSeconds: 10
  readinessProbe:
    enabled: false
    failureThreshold: 2
    httpGet:
      path: /liveness
      port: 5050
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
  livenessProbe:
    enabled: false
    failureThreshold: 5
    httpGet:
      path: /liveness
      port: 5050
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
    initialDelaySeconds: 45

## App ingress parameters
## This block defines parameters for the Nginx ingress only
##
ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
  tls:
    enabled: false
    secretName: tls
  host: ""

## App jobs parameters
## This block defines parameters for the jobs only
##
install:
  job:
    enabled: true
    initContainers:
      migrationRunner:
        enabled: true
        image:
          repository: onlyoffice/4testing-docspace-migration-runner
          tag: v1.0.0
          pullPolicy: IfNotPresent

upgrade:
  job:
    enabled: true
    initContainers:
      migrationRunner:
        enabled: true
        image:
          repository: onlyoffice/4testing-docspace-migration-runner
          tag: v1.0.0
          pullPolicy: IfNotPresent
      clearStorage:
        image:
          repository: mysql
          tag: latest
          pullPolicy: IfNotPresent

## App Proxy Frontend parameters
## This block defines parameters for the Proxy Frontend StatefulSet only
##
proxyFrontend:
  enabled: false
  image:
    repository: nginx
    tag: latest
    pullPolicy: IfNotPresent
  podSecurityContext:
    enabled: false
    runAsUser: 104
    runAsGroup: 107
  containerPorts:
    http: 80
    https: 443
  startupProbe:
    enabled: false
    httpGet:
      path: /
      port: 80
    failureThreshold: 30
    periodSeconds: 10
  readinessProbe:
    enabled: false
    failureThreshold: 2
    httpGet:
      path: /
      port: 80
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
  livenessProbe:
    enabled: false
    failureThreshold: 5
    httpGet:
      path: /
      port: 80
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
    initialDelaySeconds: 45
  extraConf:
    configMap: default-conf
    filename: default.conf
  hostname: ""
  tls:
    secretName: tls
    mountPath: /etc/godaddy/live
    crtName: cert.crt
    keyName: generated-private-key.key

## Document server parameters
## This block defines parameters for the document server StatefulSet only
##
docs:
  enabled: true
  image:
    repository: onlyoffice/documentserver
    tag: 7.3.2
    pullPolicy: IfNotPresent
  podSecurityContext:
    enabled: false
    runAsUser: 101
    runAsGroup: 101
  containerPorts:
    http: 80
    https: 443
    spch: 8080
    docs: 8000
    proxy: 8888
  startupProbe:
    enabled: false
    httpGet:
      path: /index.html
      port: 8888
    failureThreshold: 30
    periodSeconds: 10
  readinessProbe:
    enabled: false
    failureThreshold: 2
    httpGet:
      path: /index.html
      port: 8888
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
  livenessProbe:
    enabled: false
    failureThreshold: 5
    httpGet:
      path: /index.html
      port: 8888
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3
    initialDelaySeconds: 45
