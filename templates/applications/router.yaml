{{- if .Values.router.enabled }}
apiVersion: apps/v1
kind: {{ .Values.router.kind }}
metadata:
  name: router
  namespace: {{ include "docspace.namespace" . | quote }}
  labels:
    app: router
    {{- if .Values.commonLabels }}
    {{- include "docspace.labels.commonLabels" . | trim | nindent 4 }}
    {{- end }}
  {{- if or .Values.commonAnnotations .Values.router.annotations }}
  {{- $dictValue := default .Values.commonAnnotations .Values.router.annotations }}
  annotations: {{- include "docspace.annotations" ( dict "keyName" $dictValue "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.router.autoscaling.enabled }}
  replicas: {{ .Values.router.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: router
      {{- if .Values.commonLabels }}
      {{- include "docspace.labels.commonLabels" . | trim | nindent 6 }}
      {{- end }}
  {{- if eq .Values.router.kind "StatefulSet" }}
  serviceName: {{ template "docspace.svc.router.name" . }}
  {{- end }}
  {{- if .Values.router.updateStrategy }}
  {{- if eq .Values.router.kind "Deployment" }}
  strategy: {{- include "docspace.update.strategyType" .Values.router.updateStrategy }}
  {{- else }}
  updateStrategy: {{- include "docspace.update.strategyType" .Values.router.updateStrategy }}
  {{- end }}
  {{- end }}
  {{- if eq .Values.router.kind "StatefulSet" }}
  podManagementPolicy: {{ .Values.router.podManagementPolicy }}
  {{- end }}
  template:
    metadata:
      labels:
        app: router
        {{- if .Values.commonLabels }}
        {{- include "docspace.labels.commonLabels" . | trim | nindent 8 }}
        {{- end }}
      {{- if or .Values.podAnnotations .Values.router.podAnnotations }}
      {{- $dictValue := default .Values.podAnnotations .Values.router.podAnnotations }}
      annotations: {{- include "docspace.annotations" ( dict "keyName" $dictValue "context" $ ) | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "docspace.serviceAccountName" . }}
      {{- if or .Values.podSecurityContext.enabled .Values.router.podSecurityContext.enabled }}
      {{- $psc := dict }}
      {{- if .Values.router.podSecurityContext.enabled }}
      {{- $psc = .Values.router.podSecurityContext }}
      {{- else }}
      {{- $psc = .Values.podSecurityContext }}
      {{- end }}
      securityContext: {{- include "docspace.securityContext" $psc | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          {{- if eq .Values.podAntiAffinity.type "preferred" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - router
              topologyKey: {{ .Values.podAntiAffinity.topologyKey }}
            weight: {{ .Values.podAntiAffinity.weight }}
          {{- else if eq .Values.podAntiAffinity.type "required" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - router
            topologyKey: {{ .Values.podAntiAffinity.topologyKey }}
          {{- end }}
          {{- with .Values.router.customPodAntiAffinity }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.router.podAffinity }}
        podAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.router.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- if or .Values.nodeSelector .Values.router.nodeSelector }}
      nodeSelector: {{ toYaml (default .Values.nodeSelector .Values.router.nodeSelector) | nindent 8 }}
      {{- end }}
      {{- if or .Values.tolerations .Values.router.tolerations }}
      tolerations: {{ toYaml (default .Values.tolerations .Values.router.tolerations) | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      {{- if .Values.connections.hostAliases }}
      hostAliases: {{- toYaml .Values.connections.hostAliases | nindent 8 }}
      {{- end }}
      {{- with .Values.router.initContainers }}
      initContainers:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: router
        image: {{ include "docspace.imageRepository" (list . .Values.router.image.repository) }}:{{ default .Values.images.tag .Values.router.image.tag }}
        imagePullPolicy: {{ .Values.router.image.pullPolicy }}
        {{- if or .Values.containerSecurityContext.enabled .Values.router.containerSecurityContext.enabled }}
        {{- $csc := dict }}
        {{- if .Values.router.containerSecurityContext.enabled }}
        {{- $csc = .Values.router.containerSecurityContext }}
        {{- else }}
        {{- $csc = .Values.containerSecurityContext }}
        {{- end }}
        securityContext: {{- include "docspace.securityContext" $csc | nindent 10 }}
        {{- end }}
        {{- if .Values.router.lifecycleHooks }}
        lifecycle: {{- toYaml .Values.router.lifecycleHooks | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.router.containerPorts.external }}
          name: external
        {{- if .Values.router.startupProbe.enabled }}
        startupProbe: {{- omit .Values.router.startupProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
        {{- if .Values.router.readinessProbe.enabled }}
        readinessProbe: {{- omit .Values.router.readinessProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
        {{- if .Values.router.livenessProbe.enabled }}
        livenessProbe: {{- omit .Values.router.livenessProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.router.resources | nindent 10 }}
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "docspace.redis.secretName" . }}
              key: {{ .Values.connections.redisSecretKeyName }}
        {{- with .Values.router.extraEnvVars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: docspace
        - configMapRef:
            name: docspace-router
        - secretRef:
            name: {{ template "docspace.coreMachineKey.secretName" . }}
        volumeMounts:
        - name: init-scripts
          mountPath: /docker-entrypoint.d/50-change-router-conf.sh
          subPath: 50-change-router-conf.sh
        {{- if .Values.router.extraConf.customInitScripts.configMap }}
        {{- range .Values.router.extraConf.customInitScripts.fileName }}
        - name: custom-init-scripts
          mountPath: /docker-entrypoint.d/{{ . }}
          subPath: {{ . }}
        {{- end }}
        {{- end }}
        {{- if .Values.router.extraConf.templates.configMap }}
        {{- range .Values.router.extraConf.templates.fileName }}
        - name: template-files
          mountPath: /etc/nginx/templates/{{ . }}
          subPath: {{ . }}
        {{- end }}
        {{- end }}
        {{- if .Values.router.extraConf.confd.configMap }}
        {{- range .Values.router.extraConf.confd.fileName }}
        - name: confd-file
          mountPath: /etc/nginx/conf.d/{{ . }}
          subPath: {{ . }}
        {{- end }}
        {{- end }}
        - name: router-log
          mountPath: /var/log/nginx
        {{- with .Values.router.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      - name: init-scripts
        configMap:
          name: router-init-scripts
          defaultMode: 0755
      {{- if .Values.router.extraConf.customInitScripts.configMap }}
      - name: custom-init-scripts
        configMap:
          name: {{ .Values.router.extraConf.customInitScripts.configMap }}
          defaultMode: 0755
      {{- end }}
      {{- if .Values.router.extraConf.templates.configMap }}
      - name: template-files
        configMap:
          name: {{ .Values.router.extraConf.templates.configMap }}
      {{- end }}
      {{- if .Values.router.extraConf.confd.configMap }}
      - name: confd-file
        configMap:
          name: {{ .Values.router.extraConf.confd.configMap }}
      {{- end }}
      {{- with .Values.router.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      - name: router-log
        persistentVolumeClaim:
          claimName: {{ template "docspace.pvc.router.name" . }}
{{- end }}
