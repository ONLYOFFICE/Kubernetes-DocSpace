apiVersion: apps/v1
kind: Deployment
metadata:
  name: onlyoffice-proxy
  labels:
    app: onlyoffice-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: onlyoffice-proxy
  {{- if .Values.updateStrategy }}
  strategy: {{ template "appserver.update.strategyType" . }}
  {{- end }}
  template:
    metadata:
      labels:
        app: onlyoffice-proxy
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ tpl $value $ }}
        {{- end }}
      {{- end }}
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
        {{- if eq .Values.podAntiAffinity.type "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - onlyoffice-proxy
              topologyKey: {{ .Values.podAntiAffinity.topologyKey }}
            weight: {{ .Values.podAntiAffinity.weight }}
        {{- else if eq .Values.podAntiAffinity.type "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - onlyoffice-proxy
            topologyKey: {{ .Values.podAntiAffinity.topologyKey }}
        {{- end }}
      imagePullSecrets:
      - name: myregistrykey
      containers:
      - name: onlyoffice-proxy
        image: {{ .Values.images.proxy }}:{{ .Values.images.tag }}
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: mysql-password
        - name: DOCUMENT_SERVER_JWT_ENABLED
          valueFrom:
            secretKeyRef:
              name: jwt
              key: JWT_ENABLED
        - name: DOCUMENT_SERVER_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt
              key: JWT_SECRET
        - name: DOCUMENT_SERVER_JWT_HEADER
          valueFrom:
            secretKeyRef:
              name: jwt
              key: JWT_HEADER
        envFrom:
        - configMapRef:
            name: appserver-all
        - configMapRef:
            name: appserver-proxy
        - secretRef:
            name: jwt
        ports:
        - containerPort: {{ .Values.ports.appserver.http }}
          name: http
        - containerPort: {{ .Values.ports.proxy.url }}
          name: url
        - containerPort: {{ .Values.ports.proxy.internal }}
          name: internal
        - containerPort: {{ .Values.ports.proxy.external }}
          name: external
        {{ if .Values.readinessProbeEnabled }}
        readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 10 }}
        {{ end }}
        {{ if .Values.livenessProbeEnabled }}
        livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 10 }}
        {{ end }}
        {{ if .Values.startupProbeEnabled }}
        startupProbe: {{- omit .Values.startupProbe "enabled" | toYaml | nindent 10 }}
        {{ end }}
    #    securityContext:
    #      allowPrivilegeEscalation: false
        volumeMounts:
        - name: proxy-log
          mountPath: /var/log/nginx
        - name: change-hosts
          mountPath: /docker-entrypoint.d/change-hosts.sh
          subPath: change-hosts.sh
        - name: proxy-upstream
          mountPath: /etc/nginx/templates/upstream.conf.template
          subPath: upstream.conf.template
      volumes:
      - name: proxy-log
        persistentVolumeClaim:
          claimName: proxy-log
      - name: change-hosts
        configMap:
          name: change-hosts
          defaultMode: 0755
      - name: proxy-upstream
        configMap:
          name: proxy-upstream
