{{- if and .Values.docs.enabled .Values.upgrade.job.enabled .Values.upgrade.job.docsInitDB.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: docspace-docs-pre-upgrade
  namespace: {{ include "docspace.namespace" . | quote }}
  labels:
    app.kubernetes.io/component: upgrade-docs
    {{- if .Values.commonLabels }}
    {{- include "docspace.labels.commonLabels" . | trim | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- if or .Values.commonAnnotations .Values.upgrade.job.annotations }}
    {{- $dictValue := default .Values.commonAnnotations .Values.upgrade.job.annotations }}
    {{- include "docspace.annotations" ( dict "keyName" $dictValue "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  backoffLimit: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/component: upgrade-docs
        {{- if .Values.commonLabels }}
        {{- include "docspace.labels.commonLabels" . | trim | nindent 8 }}
        {{- end }}
      {{- if or .Values.podAnnotations .Values.upgrade.job.podAnnotations }}
      {{- $dictValue := default .Values.podAnnotations .Values.upgrade.job.podAnnotations }}
      annotations: {{- include "docspace.annotations" ( dict "keyName" $dictValue "context" $ ) | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "docspace.serviceAccountName" . }}
      {{- if or .Values.podSecurityContext.enabled .Values.upgrade.job.podSecurityContext.enabled }}
      {{- $psc := dict }}
      {{- if .Values.upgrade.job.podSecurityContext.enabled }}
      {{- $psc = .Values.upgrade.job.podSecurityContext }}
      {{- else }}
      {{- $psc = .Values.podSecurityContext }}
      {{- end }}
      securityContext: {{- include "docspace.securityContext" $psc | nindent 8 }}
      {{- end }}
      {{- if or .Values.upgrade.job.customPodAntiAffinity .Values.upgrade.job.podAffinity .Values.upgrade.job.nodeAffinity }}
      affinity:
        {{- with .Values.upgrade.job.customPodAntiAffinity }}
        podAntiAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.upgrade.job.podAffinity }}
        podAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.upgrade.job.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- if or .Values.nodeSelector .Values.upgrade.job.nodeSelector }}
      nodeSelector: {{ toYaml (default .Values.nodeSelector .Values.upgrade.job.nodeSelector) | nindent 8 }}
      {{- end }}
      {{- if or .Values.tolerations .Values.upgrade.job.tolerations }}
      tolerations: {{ toYaml (default .Values.tolerations .Values.upgrade.job.tolerations) | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      containers:
      - name: docspace-docs-pre-upgrade
        image: {{ .Values.upgrade.job.docsInitDB.image.repository }}:{{ .Values.upgrade.job.docsInitDB.image.tag }}
        imagePullPolicy: {{ .Values.upgrade.job.docsInitDB.image.pullPolicy }}
        {{- if or .Values.containerSecurityContext.enabled .Values.upgrade.job.containerSecurityContext.enabled }}
        {{- $csc := dict }}
        {{- if .Values.upgrade.job.containerSecurityContext.enabled }}
        {{- $csc = .Values.upgrade.job.containerSecurityContext }}
        {{- else }}
        {{- $csc = .Values.containerSecurityContext }}
        {{- end }}
        securityContext: {{- include "docspace.securityContext" $csc | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.upgrade.job.docsInitDB.resources | nindent 10 }}
        env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "docspace.mysql.secretName" . }}
              key: {{ .Values.connections.mysqlSecretKeyPassword }}
        volumeMounts:
        - name: docs-init-db
          mountPath: /scripts/docs_init_db.sh
          subPath: docs_init_db.sh
        command: ["/bin/sh", "-c"]
        args: ["/scripts/docs_init_db.sh"]
      volumes:
      - name: docs-init-db
        configMap:
          name: docspace-docs-init-db
          defaultMode: 0755
      restartPolicy: Never
{{- end }}
