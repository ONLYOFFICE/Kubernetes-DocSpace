{{- if .Values.install.job.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-install
  namespace: {{ include "docspace.namespace" . | quote }}
  {{- if .Values.commonLabels }}
  labels:
    {{- include "docspace.labels.commonLabels" . | trim | nindent 4 }}
  {{- end }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 2
  template:
    spec:
      serviceAccountName: {{ include "docspace.serviceAccountName" . }}
      {{- if or .Values.podSecurityContext.enabled .Values.install.job.podSecurityContext.enabled }}
      {{- $psc := dict }}
      {{- if .Values.install.job.podSecurityContext.enabled }}
      {{- $psc = .Values.install.job.podSecurityContext }}
      {{- else }}
      {{- $psc = .Values.podSecurityContext }}
      {{- end }}
      securityContext: {{- include "docspace.securityContext" $psc | nindent 8 }}
      {{- end }}
      {{- if or .Values.install.job.customPodAntiAffinity .Values.install.job.podAffinity .Values.install.job.nodeAffinity }}
      affinity:
        {{- with .Values.install.job.customPodAntiAffinity }}
        podAntiAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.install.job.podAffinity }}
        podAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.install.job.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- if or .Values.nodeSelector .Values.install.job.nodeSelector }}
      nodeSelector: {{ toYaml (default .Values.nodeSelector .Values.install.job.nodeSelector) | nindent 8 }}
      {{- end }}
      {{- if or .Values.tolerations .Values.install.job.tolerations }}
      tolerations: {{ toYaml (default .Values.tolerations .Values.install.job.tolerations) | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      initContainers:
      - name: check-db
        image: {{ .Values.initContainers.checkDB.image.repository }}:{{ .Values.initContainers.checkDB.image.tag }}
        imagePullPolicy: {{ .Values.initContainers.checkDB.image.pullPolicy }}
        {{- if or .Values.containerSecurityContext.enabled .Values.install.job.containerSecurityContext.enabled }}
        {{- $iccdsc := dict }}
        {{- if .Values.install.job.containerSecurityContext.enabled }}
        {{- $iccdsc = .Values.install.job.containerSecurityContext }}
        {{- else }}
        {{- $iccdsc = .Values.containerSecurityContext }}
        {{- end }}
        securityContext: {{- include "docspace.securityContext" $iccdsc | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.initContainers.checkDB.resources | nindent 10 }}
        env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "docspace.mysql.secretName" . }}
              key: {{ .Values.connections.mysqlSecretKeyPassword }}
        volumeMounts:
        - name: check-db
          mountPath: /scripts/checkdb.sh
          subPath: checkdb.sh
        command: ["/bin/sh", "-c"]
        args: ["/scripts/checkdb.sh"]
      {{- if .Values.install.job.initContainers.migrationRunner.enabled }}
      - name: migration-runner
        image: {{ include "docspace.imageRepository" (list . .Values.install.job.initContainers.migrationRunner.image.repository) }}:{{ default .Values.images.tag .Values.install.job.initContainers.migrationRunner.image.tag }}
        imagePullPolicy: {{ .Values.install.job.initContainers.migrationRunner.image.pullPolicy }}
        {{- if or .Values.containerSecurityContext.enabled .Values.install.job.containerSecurityContext.enabled }}
        {{- $icmrsc := dict }}
        {{- if .Values.install.job.containerSecurityContext.enabled }}
        {{- $icmrsc = .Values.install.job.containerSecurityContext }}
        {{- else }}
        {{- $icmrsc = .Values.containerSecurityContext }}
        {{- end }}
        securityContext: {{- include "docspace.securityContext" $icmrsc | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.install.job.initContainers.migrationRunner.resources | nindent 10 }}
        env:
        - name: MYSQL_USER
          value: {{ .Values.connections.mysqlUser }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "docspace.mysql.secretName" . }}
              key: {{ .Values.connections.mysqlSecretKeyPassword }}
        - name: MIGRATION_TYPE
          value: {{ .Values.connections.migrationType }}
        envFrom:
        - configMapRef:
            name: docspace
      {{- end }}
      containers:
      - name: app-init-storage
        image: {{ include "docspace.imageRepository" (list . .Values.initContainers.initStorage.image.repository) }}:{{ default .Values.images.tag .Values.initContainers.initStorage.image.tag }}
        imagePullPolicy: {{ .Values.initContainers.initStorage.image.pullPolicy }}
        {{- if or .Values.containerSecurityContext.enabled .Values.install.job.containerSecurityContext.enabled }}
        {{- $csc := dict }}
        {{- if .Values.install.job.containerSecurityContext.enabled }}
        {{- $csc = .Values.install.job.containerSecurityContext }}
        {{- else }}
        {{- $csc = .Values.containerSecurityContext }}
        {{- end }}
        securityContext: {{- include "docspace.securityContext" $csc | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.initContainers.initStorage.resources | nindent 10 }}
        volumeMounts:
        - name: files-data
          mountPath: /var/www/products/ASC.Files/server/
        - name: people-data
          mountPath: /var/www/products/ASC.People/server/
      volumes:
      - name: files-data
        persistentVolumeClaim:
          claimName: {{ template "docspace.pvc.files.name" . }}
      - name: people-data
        persistentVolumeClaim:
          claimName: {{ template "docspace.pvc.people.name" . }}
      - name: check-db
        configMap:
          name: check-db
          defaultMode: 0755
      restartPolicy: Never
{{- end }}
