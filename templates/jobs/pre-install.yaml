{{- if .Values.install.job.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-install
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 2
  template:
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      {{- if .Values.install.job.initContainers.migrationRunner.enabled }}
      initContainers:
      - name:  migration-runner
        image: {{ .Values.install.job.initContainers.migrationRunner.image.repository }}:{{ .Values.install.job.initContainers.migrationRunner.image.tag }}
        imagePullPolicy: {{ .Values.install.job.initContainers.migrationRunner.image.pullPolicy }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "app.mysql.secretName" . }}
              key: {{ .Values.connections.mysqlSecretKeyRootPassword }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "app.mysql.secretName" . }}
              key: {{ .Values.connections.mysqlSecretKeyPassword }}
        envFrom:
        - configMapRef:
            name: app-all
      {{- end }}
      containers:
      - name: app-init-storage
        image: {{ .Values.images.initContainer.initStorage }}:{{ .Values.images.tag }}
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: files-data
          mountPath: /var/www/products/ASC.Files/server/
        - name: people-data
          mountPath: /var/www/products/ASC.People/server/
      volumes:
      - name: files-data
        persistentVolumeClaim:
          claimName: {{ template "app.pvc.files.name" . }}
      - name: people-data
        persistentVolumeClaim:
          claimName: {{ template "app.pvc.people.name" . }}
      restartPolicy: Never
{{- end }}
