{{- if eq .Values.product.name "appserver" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: onlyoffice-thumbnails
  labels:
    app: onlyoffice-thumbnails
spec:
  selector:
    matchLabels:
      app: onlyoffice-thumbnails
  serviceName: onlyoffice-thumbnails
  replicas: 1
  updateStrategy:
    type: {{ .Values.statefulsetUpdateStrategy.type }}
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: onlyoffice-thumbnails
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ tpl $value $ }}
        {{- end }}
      {{- end }}
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      initContainers:
      - name: app-wait-storage
        image: {{ .Values.images.initContainer.waitStorage }}:{{ .Values.images.tag }}
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: files-data
          mountPath: /var/www/products/
      containers:
      - name: onlyoffice-thumbnails
        image: {{ .Values.images.thumbnails }}:{{ .Values.images.tag }}
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "app.mysql.secretName" . }}
              key: {{ .Values.connections.mysqlSecretKeyRootPassword }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "app.mysql.secretName" . }}
              key: {{ .Values.connections.mysqlSecretKeyPassword }}
        - name: DOCUMENT_SERVER_JWT_ENABLED
          valueFrom:
            secretKeyRef:
              name: jwt
              key: JWT_ENABLED
        - name: DOCUMENT_SERVER_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt
              key: JWT_SECRET
        - name: DOCUMENT_SERVER_JWT_HEADER
          valueFrom:
            secretKeyRef:
              name: jwt
              key: JWT_HEADER
        envFrom:
        - configMapRef:
            name: app-all
        - secretRef:
            name: jwt
        ports:
        - containerPort: {{ .Values.containerPorts.app }}
          name: app
        - containerPort: {{ .Values.containerPorts.thumbnails }}
          name: thum
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
        {{- if .Values.startupProbe.enabled }}
        startupProbe: {{- omit .Values.startupProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
        volumeMounts:
        {{- if .Values.extraConf.secretName }}
        {{- range .Values.extraConf.fileName }}
        - name: custom-file
          mountPath: /app/onlyoffice/config/{{ . }}
          subPath: {{ . }}
        {{- end }}
        {{- end }}
        - name: app-data
          mountPath: /app/onlyoffice/data
        - name: files-data
          mountPath: /var/www/products/ASC.Files/server/
        - name: people-data
          mountPath: /var/www/products/ASC.People/server/
        {{- if .Values.onlyofficeCrm.enabled }}
        - name: crm-data
          mountPath: /var/www/products/ASC.CRM/server/
        {{- end }}
        {{- if .Values.onlyofficeProjectServer.enabled }}
        - name: project-data
          mountPath: /var/www/products/ASC.Projects/server/
        {{- end }}
        {{- if .Values.onlyofficeCalendar.enabled }}
        - name: calendar-data
          mountPath: /var/www/products/ASC.Calendar/server/
        {{- end }}
        {{- if .Values.onlyofficeMail.enabled }}
        - name: mail-data
          mountPath: /var/www/products/ASC.Mail/server/
        {{- end }}
      volumes:
      {{- if .Values.extraConf.secretName }}
      - name: custom-file
        secret:
          secretName: {{ .Values.extraConf.secretName }}
      {{- end }}
      - name: app-data
        persistentVolumeClaim:
          claimName: {{ template "app.pvc.data.name" . }}
      - name: files-data
        persistentVolumeClaim:
          claimName: {{ template "app.pvc.files.name" . }}
      - name: people-data
        persistentVolumeClaim:
          claimName: {{ template "app.pvc.people.name" . }}
      {{- if .Values.onlyofficeCrm.enabled }}
      - name: crm-data
        persistentVolumeClaim:
          claimName: crm-data
      {{- end }}
      {{- if .Values.onlyofficeProjectServer.enabled }}
      - name: project-data
        persistentVolumeClaim:
          claimName: project-data
      {{- end }}
      {{- if .Values.onlyofficeCalendar.enabled }}
      - name: calendar-data
        persistentVolumeClaim:
          claimName: calendar-data
      {{- end }}
      {{- if .Values.onlyofficeMail.enabled }}
      - name: mail-data
        persistentVolumeClaim:
          claimName: mail-data
      {{- end }}
{{- end }}
