apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: onlyoffice-document-server
  labels:
    app: onlyoffice-document-server
spec:
  selector:
    matchLabels:
      app: onlyoffice-document-server
  serviceName: onlyoffice-document-server
  replicas: 1
  updateStrategy:
    type: {{ .Values.statefulsetUpdateStrategy.type }}
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: onlyoffice-document-server
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ tpl $value $ }}
        {{- end }}
      {{- end }}
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      containers:
      - name: onlyoffice-document-server
        image: {{ .Values.images.documentserver }}:{{ .Values.images.documentserverTag }}
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "appserver.mysql.secretName" . }}
              key: {{ .Values.connections.mysqlSecretKeyRootPassword }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "appserver.mysql.secretName" . }}
              key: {{ .Values.connections.mysqlSecretKeyPassword }}
        - name: DOCUMENT_SERVER_JWT_ENABLED
          valueFrom:
            secretKeyRef:
              name: jwt
              key: JWT_ENABLED
        - name: DOCUMENT_SERVER_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt
              key: JWT_SECRET
        - name: DOCUMENT_SERVER_JWT_HEADER
          valueFrom:
            secretKeyRef:
              name: jwt
              key: JWT_HEADER
        envFrom:
        - configMapRef:
            name: appserver-all
        - secretRef:
            name: jwt
        ports:
        - containerPort: {{ .Values.containerPorts.docs.http }}
          name: http
        - containerPort: {{ .Values.containerPorts.docs.https }}
          name: https
        - containerPort: {{ .Values.containerPorts.docs.spch }}
          name: spch
        - containerPort: {{ .Values.containerPorts.docs.docs }}
          name: docs
        - containerPort: {{ .Values.containerPorts.docs.prox }}
          name: prox
        {{ if .Values.readinessProbeEnabled }}
        readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 10 }}
        {{ end }}
        {{ if .Values.livenessProbeEnabled }}
        livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 10 }}
        {{ end }}
        {{ if .Values.startupProbeEnabled }}
        startupProbe: {{- omit .Values.startupProbe "enabled" | toYaml | nindent 10 }}
        {{ end }}
        {{- if .Values.podSecurityContext.enabled }}
        securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: app-data
          mountPath: /app/onlyoffice/data
      volumes:
        - name: app-data
          persistentVolumeClaim:
            claimName: app-data
