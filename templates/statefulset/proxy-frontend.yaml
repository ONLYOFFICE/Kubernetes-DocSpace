{{- if .Values.proxyFrontend.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: proxy-frontend
  namespace: {{ include "docspace.namespace" . | quote }}
  labels:
    app: proxy-frontend
    {{- if .Values.commonLabels }}
    {{- include "docspace.labels.commonLabels" . | trim | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy-frontend
      {{- if .Values.commonLabels }}
      {{- include "docspace.labels.commonLabels" . | trim | nindent 6 }}
      {{- end }}
  serviceName: {{ template "docspace.svc.proxyFrontend.name" . }}
  {{- if .Values.proxyFrontend.updateStrategy }}
  updateStrategy: {{- toYaml .Values.proxyFrontend.updateStrategy | nindent 4 }}
  {{- end }}
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: proxy-frontend
        {{- if .Values.commonLabels }}
        {{- include "docspace.labels.commonLabels" . | trim | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ tpl $value $ }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "docspace.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if or .Values.proxyFrontend.podAffinity .Values.proxyFrontend.nodeAffinity }}
      affinity:
        {{- with .Values.proxyFrontend.podAffinity }}
        podAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.proxyFrontend.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      containers:
      - name: proxy-frontend
        image: {{ .Values.proxyFrontend.image.repository }}:{{ .Values.proxyFrontend.image.tag }}
        imagePullPolicy: {{ .Values.proxyFrontend.image.pullPolicy }}
        {{- if .Values.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.proxyFrontend.containerPorts.http }}
          name: http
        - containerPort: {{ .Values.proxyFrontend.containerPorts.https }}
          name: https
        {{- if .Values.proxyFrontend.startupProbe.enabled }}
        startupProbe: {{- omit .Values.proxyFrontend.startupProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
        {{- if .Values.proxyFrontend.readinessProbe.enabled }}
        readinessProbe: {{- omit .Values.proxyFrontend.readinessProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
        {{- if .Values.proxyFrontend.livenessProbe.enabled }}
        livenessProbe: {{- omit .Values.proxyFrontend.livenessProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.proxyFrontend.resources | nindent 10 }}
        volumeMounts:
        {{- if .Values.proxyFrontend.extraConf.confd.configMap }}
        {{- range .Values.proxyFrontend.extraConf.confd.fileName }}
        - name: confd-file
          mountPath: /etc/nginx/conf.d/{{ . }}
          subPath: {{ . }}
        {{- end }}
        {{- end }}
        {{- if .Values.proxyFrontend.extraConf.customConfd.configMap }}
        {{- range .Values.proxyFrontend.extraConf.customConfd.fileName }}
        - name: custom-confd-file
          mountPath: /etc/nginx/conf.d/{{ . }}
          subPath: {{ . }}
        {{- end }}
        {{- end }}
        {{- if .Values.proxyFrontend.tls.secretName }}
        - name: tls
          mountPath: {{ .Values.proxyFrontend.tls.mountPath }}
          readOnly: true
        {{- end }}
      volumes:
      {{- if .Values.proxyFrontend.extraConf.confd.configMap }}
      - name: confd-file
        configMap:
          name: {{ .Values.proxyFrontend.extraConf.confd.configMap }}
      {{- end }}
      {{- if .Values.proxyFrontend.extraConf.customConfd.configMap }}
      - name: custom-confd-file
        configMap:
          name: {{ .Values.proxyFrontend.extraConf.customConfd.configMap }}
      {{- end }}
      {{- if .Values.proxyFrontend.tls.secretName }}
      - name: tls
        secret:
          secretName: {{ .Values.proxyFrontend.tls.secretName }}
          items:
          - key: {{ .Values.proxyFrontend.tls.crtName }}
            path: {{ .Values.proxyFrontend.tls.crtName }}
          - key: {{ .Values.proxyFrontend.tls.keyName }}
            path: {{ .Values.proxyFrontend.tls.keyName }}
      {{- end }}
{{- end }}
