apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: onlyoffice-notify
  labels:
    app: onlyoffice-notify
spec:
  selector:
    matchLabels:
      app: onlyoffice-notify
  serviceName: onlyoffice-notify
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: onlyoffice-notify
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - onlyoffice-notify
              topologyKey: "kubernetes.io/hostname"
    #  securityContext:
    #    runAsUser: 104
    #    runAsGroup: 107
      initContainers:
      - name: appserver-wait-storage
        image: onlyoffice/4testing-appserver-wait-bin-share:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: files-data
          mountPath: /var/www/products/
      containers:
      - name: onlyoffice-notify
        image: onlyoffice/4testing-appserver-notify:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: mysql-password
        - name: DOCUMENT_SERVER_JWT_ENABLED
          valueFrom:
            secretKeyRef:
              name: appserver-all
              key: JWT_ENABLED
        - name: DOCUMENT_SERVER_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: appserver-all
              key: JWT_SECRET
        - name: DOCUMENT_SERVER_JWT_HEADER
          valueFrom:
            secretKeyRef:
              name: appserver-all
              key: JWT_HEADER
        envFrom:
        - secretRef:
            name: appserver-all
        ports:
        - containerPort: 5050
          name: http
    #    livenessProbe:
    #      failureThreshold: 2
    #      httpGet:
    #        path: /
    #        port: 5050
    #      periodSeconds: 10
    #      successThreshold: 1
    #      timeoutSeconds: 5
    #      initialDelaySeconds: 45
    #    securityContext:
    #      allowPrivilegeEscalation: false
        volumeMounts:
        - name: app-data
          mountPath: /app/onlyoffice/data
        - name: files-data
          mountPath: /var/www/products/ASC.Files/server/
        - name: people-data
          mountPath: /var/www/products/ASC.People/server/
        - name: crm-data
          mountPath: /var/www/products/ASC.CRM/server/
        - name: project-data
          mountPath: /var/www/products/ASC.Projects/server/
        - name: calendar-data
          mountPath: /var/www/products/ASC.Calendar/server/
        - name: mail-data
          mountPath: /var/www/products/ASC.Mail/server/
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data
      - name: files-data
        persistentVolumeClaim:
          claimName: files-data
      - name: people-data
        persistentVolumeClaim:
          claimName: people-data
      - name: crm-data
        persistentVolumeClaim:
          claimName: crm-data
      - name: project-data
        persistentVolumeClaim:
          claimName: project-data
      - name: calendar-data
        persistentVolumeClaim:
          claimName: calendar-data
      - name: mail-data
        persistentVolumeClaim:
          claimName: mail-data
